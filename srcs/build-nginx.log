#0 building with "default" instance using docker driver

#1 [nginx internal] load build definition from Dockerfile
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [nginx internal] load .dockerignore
#2 transferring context: 32B done
#2 DONE 0.0s

#3 [nginx internal] load metadata for docker.io/library/debian:bullseye
#3 DONE 0.4s

#4 [nginx  1/10] FROM docker.io/library/debian:bullseye@sha256:e5bfb7364038fd100c2faebdd674145bd1bc758a57f3c67023cced99d0eff0f7
#4 DONE 0.0s

#5 [nginx internal] load build context
#5 transferring context: 3.36kB done
#5 DONE 0.0s

#6 [nginx  2/10] RUN apt-get update && apt-get install -y     nginx curl openssl certbot     && rm -rf /var/lib/apt/lists/*
#6 CACHED

#7 [nginx  3/10] RUN env
#7 CACHED

#8 [nginx  4/10] RUN mkdir -p /run/nginx
#8 CACHED

#9 [nginx  5/10] COPY ./conf/default.conf /etc/nginx/conf.d/default.conf
#9 DONE 0.1s

#10 [nginx  6/10] RUN rm /etc/nginx/sites-enabled/default
#10 DONE 0.3s

#11 [nginx  7/10] RUN mkdir -p /var/www/html &&     chown -R www-data:www-data /var/www/html &&     chmod -R 755 /var/www/html
#11 DONE 0.4s

#12 [nginx  8/10] COPY ./conf/ssl/fullchain.crt /var/www/htm/
#12 DONE 0.1s

#13 [nginx  9/10] COPY ./conf/ssl/privkey.key /var/www/htm/
#13 DONE 0.1s

#14 [nginx 10/10] RUN echo -e "OK" > /var/www/html/healthcheck.html
#14 DONE 0.3s

#15 [nginx] exporting to image
#15 exporting layers 0.1s done
#15 writing image sha256:462ff1c3e5a1145c0121b7eb542fbc7cd9fcab575f0ad7d91365c5cde7036455 done
#15 naming to docker.io/library/nginx done
#15 DONE 0.2s
 nginx  Built
